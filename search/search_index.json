{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Atmo Lab","text":""},{"location":"#intro","title":"Intro","text":"<p>This is the project that observes the varing of global temperature for the first half of 2021. </p> <p>Hope you guys enjoy!!! And be helpful for the one who also interested in Atmospheric Science.</p>"},{"location":"#create-enviroment","title":"Create Enviroment","text":"<p><code>MacOS 11.5.2</code> <code>conda --version: 4.11.0</code> <pre><code>$ conda create --name atmpy38 python=3.8\n$ conda activate atmpy38\n</code></pre></p>"},{"location":"#build-web","title":"Build web","text":"<pre><code>pip install mkdocs\npip install mkdocs-material\npip install pymdown-extensions\npip install mkdocstrings\npip install mkdocs-git-revision-date-plugin\npip install mkdocs-jupyter\n\nmkdocs serve\nmkdocs build\n</code></pre>"},{"location":"#under-atmpy38","title":"Under atmpy38","text":"<pre><code>$ conda install numpy\n$ conda install matplotlib\n$ conda install -c anaconda basemap\n$ conda install -c conda-forge basemap-data-hires\n$ conda install -c conda-forge metpy\n$ conda install pandas\n$ conda install netcdf4\n$ conda install -c conda-forge cartopy\n</code></pre>"},{"location":"#verify-version","title":"Verify version","text":"<pre><code>$ conda --version\nconda 4.11.0\n\n$ python --version\nPython 3.8.16\n\n$ python\n&gt;&gt;&gt; from mpl.toolkits.basemap import Basemap\n&gt;&gt;&gt; quit()\n</code></pre>"},{"location":"#project-showcase","title":"Project Showcase","text":"Name Display Global Surface Temperature Draw TAIWAN $CO_2$ Emission"},{"location":"#license","title":"LICENSE","text":"<p>Released under MIT by @1chooo.</p> <ul> <li>This software can be modified and reused without restriction.</li> <li>The original license must be included with any copies of this software.</li> <li>If a significant portion of the source code is used, please provide a link back to this repository.</li> </ul>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#create-enviroment","title":"Create Enviroment","text":"<p><code>MacOS 11.5.2</code> <code>conda --version: 4.11.0</code> <pre><code>$ conda create --name atmpy38 python=3.8\n$ conda activate atmpy38\n</code></pre></p>"},{"location":"usage/#build-web","title":"Build web","text":"<pre><code>pip install mkdocs\npip install mkdocs-material\npip install pymdown-extensions\npip install mkdocstrings\npip install mkdocs-git-revision-date-plugin\npip install mkdocs-jupyter\n\nconda install -c conda-forge mkdocs\nconda install -c conda-forge mkdocs-material\nconda install -c conda-forge pymdown-extensions\nconda install -c conda-forge mkdocstrings\nconda install -c conda-forge mkdocs-git-revision-date-plugin\nconda install -c conda-forge mkdocs-jupyter\n\nmkdocs serve\nmkdocs build\n</code></pre>"},{"location":"usage/#under-atmpy38","title":"Under atmpy38","text":"<pre><code>$ conda install numpy\n$ conda install matplotlib\n$ conda install -c anaconda basemap\n$ conda install -c conda-forge basemap-data-hires\n$ conda install -c conda-forge metpy\n$ conda install pandas\n$ conda install netcdf4\n$ conda install -c conda-forge cartopy\n</code></pre>"},{"location":"usage/#verify-version","title":"Verify version","text":"<pre><code>$ conda --version\nconda 4.11.0\n\n$ python --version\nPython 3.8.16\n\n$ python\n&gt;&gt;&gt; from mpl.toolkits.basemap import Basemap\n&gt;&gt;&gt; quit()\n</code></pre>"},{"location":"showcase/draw_Boston/","title":"Boston","text":"In\u00a0[1]: Copied! <pre>'''\n@version: 1.0.0\n@date: 2023/05/18\n@brief: Draw a map of Boston with elevation data.\n\nThis script uses the mpl_toolkits.basemap package \nto draw a map of Boston with a colorbar showing elevation data. \nThe map is centered on Boston and shows its surrounding seas and countries.\n\nmain.py\n'''\n\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.basemap import Basemap\nimport numpy as np\n\n# Set the latitudinal and longitudinal limits of the map for Boston.\n\n# minLat, maxLat = 40.5, 42.5\nminLat, maxLat = 40.5, 43\n# minLon, maxLon = -71.25, -69.75\nminLon, maxLon = -72, -69.75\n\n# Create a figure and axes object.\n\nfig = plt.figure(figsize=(8, 8))\nax = fig.add_axes([0.1, 0.1, 0.8, 0.8])\n\n# Create a Basemap object with the specified projection and limits.\n\nm = Basemap(\n    projection='cyl',\n    resolution='h',\n    llcrnrlat=minLat,\n    urcrnrlat=maxLat,\n    llcrnrlon=minLon,\n    urcrnrlon=maxLon,\n    ax=ax\n)\n\n# Draw the blue marble background.\n\nm.bluemarble()\n\n# Add the coastline and country boundaries.\n\nm.drawcoastlines(color='k')\nm.drawcountries(color='k')\n\n# Add the parallels and meridians.\n\nparallels = np.arange(40.5, 42.6, 0.5)\nmeridians = np.arange(-71.25, -69.74, 0.5)\nm.drawparallels(\n    parallels, \n    labels=[1, 0, 0, 0], \n    fontsize=10, \n    linewidth=0.5\n)\nm.drawmeridians(\n    meridians, \n    labels=[0, 0, 0, 1], \n    fontsize=10, \n    linewidth=0.5\n)\n\n# Set the title of the plot.\n\nplt.title('Map of Boston', fontsize=20)\n\n# # Set the labels for the x and y axes.\n\n# plt.xlabel('Longitude', fontsize=12, labelpad=10)\n# plt.ylabel('Latitude', fontsize=12, labelpad=10)\n\n# Create a dummy image for the colorbar.\n\nim = ax.imshow(np.zeros((4, 4)), cmap='Blues', vmin=0, vmax=1)\n\n# Add a colorbar with the specified label and position.\n\ncolorbar = plt.colorbar(im, fraction=0.046, pad=0.04, label='Elevation (m)')\n\n# Save the figure and display it.\n\n# fig.savefig(\"./img/Boston.jpg\", dpi=600)\nplt.show()\n</pre> ''' @version: 1.0.0 @date: 2023/05/18 @brief: Draw a map of Boston with elevation data.  This script uses the mpl_toolkits.basemap package  to draw a map of Boston with a colorbar showing elevation data.  The map is centered on Boston and shows its surrounding seas and countries.  main.py '''  import matplotlib.pyplot as plt from mpl_toolkits.basemap import Basemap import numpy as np  # Set the latitudinal and longitudinal limits of the map for Boston.  # minLat, maxLat = 40.5, 42.5 minLat, maxLat = 40.5, 43 # minLon, maxLon = -71.25, -69.75 minLon, maxLon = -72, -69.75  # Create a figure and axes object.  fig = plt.figure(figsize=(8, 8)) ax = fig.add_axes([0.1, 0.1, 0.8, 0.8])  # Create a Basemap object with the specified projection and limits.  m = Basemap(     projection='cyl',     resolution='h',     llcrnrlat=minLat,     urcrnrlat=maxLat,     llcrnrlon=minLon,     urcrnrlon=maxLon,     ax=ax )  # Draw the blue marble background.  m.bluemarble()  # Add the coastline and country boundaries.  m.drawcoastlines(color='k') m.drawcountries(color='k')  # Add the parallels and meridians.  parallels = np.arange(40.5, 42.6, 0.5) meridians = np.arange(-71.25, -69.74, 0.5) m.drawparallels(     parallels,      labels=[1, 0, 0, 0],      fontsize=10,      linewidth=0.5 ) m.drawmeridians(     meridians,      labels=[0, 0, 0, 1],      fontsize=10,      linewidth=0.5 )  # Set the title of the plot.  plt.title('Map of Boston', fontsize=20)  # # Set the labels for the x and y axes.  # plt.xlabel('Longitude', fontsize=12, labelpad=10) # plt.ylabel('Latitude', fontsize=12, labelpad=10)  # Create a dummy image for the colorbar.  im = ax.imshow(np.zeros((4, 4)), cmap='Blues', vmin=0, vmax=1)  # Add a colorbar with the specified label and position.  colorbar = plt.colorbar(im, fraction=0.046, pad=0.04, label='Elevation (m)')  # Save the figure and display it.  # fig.savefig(\"./img/Boston.jpg\", dpi=600) plt.show()  <pre>\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nCell In[1], line 14\n      1 '''\n      2 @version: 1.0.0\n      3 @date: 2023/05/18\n   (...)\n     10 main.py\n     11 '''\n     13 import matplotlib.pyplot as plt\n---&gt; 14 from mpl_toolkits.basemap import Basemap\n     15 import numpy as np\n     17 # Set the latitudinal and longitudinal limits of the map for Boston.\n     18 \n     19 # minLat, maxLat = 40.5, 42.5\n\nModuleNotFoundError: No module named 'mpl_toolkits.basemap'</pre>"},{"location":"showcase/draw_Boston/#boston","title":"Boston\u00b6","text":""},{"location":"showcase/draw_Taiwan/","title":"Draw Taiwan","text":"In\u00a0[1]: Copied! <pre>import matplotlib.pyplot as plt\nfrom mpl_toolkits.basemap import Basemap\nimport numpy as np\n\n# Set the latitudinal and longitudinal limits of the map.\n\nminLat, maxLat = 21.75, 25.5\nminLon, maxLon = 119.25, 122.5\n\n# Create a figure and axes object.\n\nfig = plt.figure(figsize=(8, 8))\nax = fig.add_axes([0.1, 0.1, 0.8, 0.8])\n\n# Create a Basemap object with the specified projection and limits.\n\nm = Basemap(\n    projection='cyl',\n    resolution='h',\n    llcrnrlat=minLat,\n    urcrnrlat=maxLat,\n    llcrnrlon=minLon,\n    urcrnrlon=maxLon,\n    ax=ax\n)\n\n# Draw the blue marble background.\n\nm.bluemarble()\n\n# Add the coastline and country boundaries.\n\nm.drawcoastlines(color='k')\nm.drawcountries(color='k')\n\n# Add the parallels and meridians.\n\nparallels = np.arange(21., 26.1, 1.)\nmeridians = np.arange(119., 123.1, 1.)\nm.drawparallels(\n    parallels, \n    labels=[1, 0, 0, 0], \n    fontsize=14, linewidth=0.5\n)\nm.drawmeridians(\n    meridians, \n    labels=[0, 0, 0, 1], \n    fontsize=14, \n    linewidth=0.5\n)\n\n# Set the title of the plot.\n\nplt.title('Map of Taiwan with Elevation Data', fontsize=20)\n\n# # Move the axis labels outward\n\n# ax.tick_params(axis='both', which='major', pad=10)\n\n# # Set the labels for the x and y axes.\n\n# plt.xlabel('Longitude', fontsize=16)\n# plt.ylabel('Latitude', fontsize=16)\n\n# Create a dummy image for the colorbar.\n\nim = ax.imshow(np.zeros((4, 4)), cmap='Blues', vmin=0, vmax=1)\n\n# Add a colorbar with the specified label and position.\n\ncolorbar = plt.colorbar(im, fraction=0.046, pad=0.04, label='Elevation (m)')\n\n# Save the figure and display it.\n\n# fig.savefig(\"./img/Taiwan.jpg\", dpi=600)\nplt.show()\n</pre> import matplotlib.pyplot as plt from mpl_toolkits.basemap import Basemap import numpy as np  # Set the latitudinal and longitudinal limits of the map.  minLat, maxLat = 21.75, 25.5 minLon, maxLon = 119.25, 122.5  # Create a figure and axes object.  fig = plt.figure(figsize=(8, 8)) ax = fig.add_axes([0.1, 0.1, 0.8, 0.8])  # Create a Basemap object with the specified projection and limits.  m = Basemap(     projection='cyl',     resolution='h',     llcrnrlat=minLat,     urcrnrlat=maxLat,     llcrnrlon=minLon,     urcrnrlon=maxLon,     ax=ax )  # Draw the blue marble background.  m.bluemarble()  # Add the coastline and country boundaries.  m.drawcoastlines(color='k') m.drawcountries(color='k')  # Add the parallels and meridians.  parallels = np.arange(21., 26.1, 1.) meridians = np.arange(119., 123.1, 1.) m.drawparallels(     parallels,      labels=[1, 0, 0, 0],      fontsize=14, linewidth=0.5 ) m.drawmeridians(     meridians,      labels=[0, 0, 0, 1],      fontsize=14,      linewidth=0.5 )  # Set the title of the plot.  plt.title('Map of Taiwan with Elevation Data', fontsize=20)  # # Move the axis labels outward  # ax.tick_params(axis='both', which='major', pad=10)  # # Set the labels for the x and y axes.  # plt.xlabel('Longitude', fontsize=16) # plt.ylabel('Latitude', fontsize=16)  # Create a dummy image for the colorbar.  im = ax.imshow(np.zeros((4, 4)), cmap='Blues', vmin=0, vmax=1)  # Add a colorbar with the specified label and position.  colorbar = plt.colorbar(im, fraction=0.046, pad=0.04, label='Elevation (m)')  # Save the figure and display it.  # fig.savefig(\"./img/Taiwan.jpg\", dpi=600) plt.show() <pre>\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nCell In[1], line 2\n      1 import matplotlib.pyplot as plt\n----&gt; 2 from mpl_toolkits.basemap import Basemap\n      3 import numpy as np\n      5 # Set the latitudinal and longitudinal limits of the map.\n\nModuleNotFoundError: No module named 'mpl_toolkits.basemap'</pre>"},{"location":"showcase/draw_Taiwan/#draw-taiwan","title":"Draw Taiwan\u00b6","text":""},{"location":"showcase/surface_temperature/","title":"surface_temperature","text":"In\u00a0[1]: Copied! <pre>'''\n@version: 1.0.0\n@date: 2023/05/09\n@brief: This script generates a time-lapse GIF \nof global surface temperature for the year 2021.\n\nmain.py\n'''\n\nfrom netCDF4 import Dataset\nimport numpy as np\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.basemap import Basemap\nfrom PIL import Image\n\nmpl.use('TKAgg')\n</pre> ''' @version: 1.0.0 @date: 2023/05/09 @brief: This script generates a time-lapse GIF  of global surface temperature for the year 2021.  main.py '''  from netCDF4 import Dataset import numpy as np import matplotlib as mpl import matplotlib.pyplot as plt from mpl_toolkits.basemap import Basemap from PIL import Image  mpl.use('TKAgg') <pre>\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nCell In[1], line 10\n      1 '''\n      2 @version: 1.0.0\n      3 @date: 2023/05/09\n   (...)\n      7 main.py\n      8 '''\n---&gt; 10 from netCDF4 import Dataset\n     11 import numpy as np\n     12 import matplotlib as mpl\n\nModuleNotFoundError: No module named 'netCDF4'</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"showcase/surface_temperature/#surface_temperature","title":"surface_temperature\u00b6","text":""}]}